# See the "volcano" data:
volcano
nrow(volcano)
ncol(volcano)
dim(volcano)
max(volcano)
min(volcano)
# subsetting:
snails[1]   # first value
snails[2]
snails[1:3]
volcano[1:5, 1:5]
volcano[1, 1]
volcano[2]
volcano[88]
# 3-D perpective plot:
persp(volcano, col = "green")
# Colour map:
image(volcano)
# Contour map:
contour(volcano, col = "blue", lwd = 2)
contour(volcano, zlim = c(0,160), col = "darkgreen", levels = seq(0, 160, 5))
contour(volcano, zlim = c(161,200), col = "red", add=T, levels = seq(165, 200, 5))
image(volcano)
image(volcano, col = terrain.colors(20))
image(volcano, col = rainbow(20))
image(volcano , col = cm.colors(20))
persp
?persp
dat<-data.frame(treatment = rep(1:2,each=10), variable = runif(20,1,12))
dat
aggregate(dat$variable,by=list(dat$treatment),sum)
?visreg
install.packages("visreg")
?visreg
library(visreg)
?visreg
library(raster)
library(maptools)
library(dismo)
install.packages(c("caret", "cluster", "codetools", "colorspace", "foreign", "ggplot2", "htmlwidgets", "knitr", "lattice", "maptools", "Matrix", "mgcv", "R.oo", "R.utils", "RcppArmadillo", "reshape2", "rgdal", "RStoolbox", "scales", "shiny", "SparseM", "survival", "XML", "yaml"))
?plot.lm
province<-c("British Columbia")
canada<-getData('GADM', countr="CAN", level=1)
ca.provinces<-canada[which(canada$NAME_1 %in% province),]
library(rgdal)
province<-c("British Columbia")
canada<-getData('GADM', countr="CAN", level=1)
ca.provinces<-canada[which(canada$NAME_1 %in% province),]
library(raster)
library(raster)
library(sp)
canada<-getData('GADM', countr="CAN", level=1)
ca.provinces<-canada[which(canada$NAME_1 %in% province),]
plot(ca.provinces)
dat<-data.frame(Catch = c(18,82), Landed value = c(34,66),
International trade value = c(33,67))
dat<-data.frame(x = c("Catch","Landed value",
"International trade value"),
Shellfish = c(18,34,33),
Finfish = c(82,66,67))
?barplot()
tab<-table(dat$Shellfish,dat$Finfish)
barplot(tab)
tab
barplot(dat$Shellfish)
dat<-melt(dat,id=c("x"))
library(reshape)
install.packages("reshape")
library(reshape)
dat<-melt(dat,id=c("x"))
dat
table(value)
table(dat$value)
barplot(dat$Shellfish)
barplot(dat$value)
tab<-table(dat$value)
barplot(tab)
tab<-table(dat$value,dat$variable)
barplot(tab)
dat.ord<-matrix(dat$value)
matrix(dat$value,nrow=3)
dat.ord<-matrix(dat$value,nrow=3,by.row=T)
dat.ord<-matrix(dat$value,nrow=3,byrow=T)
dat.ord
dat.ord<-matrix(dat$value,byrow=T)
dat.ord
dat.ord<-matrix(dat$value,nrow=2,byrow=T)
dat.ord
str(dat)
dat.ord<-matrix(dat$value,nrow=2,byrow=T)
colnames(dat.ord)=levels(dat$x)
rownames(dat.ord)=levels(dat$variable)
barplot(dat.ord)
legend("topright",inset=c(-0.25,0), legend=rownames(dat.ord))
barplot(dat.ord,ylab="%")
legend("topright",inset=c(-0.25,0), legend=rownames(dat.ord))
par(mar=c(5.1, 4.1, 4.1, 7.1), xpd=TRUE)
barplot(dat.ord,ylab="%")
legend("topright",inset=c(-0.25,0), legend=rownames(dat.ord))
barplot(dat.ord,ylab="%",col=c("grey10","grey80"))
barplot(dat.ord,ylab="%",col=c("grey20","grey80"))
barplot(dat.ord,ylab="%",col=c("grey40","grey80"))
barplot(dat.ord,ylab="%",col=c("blue","grey80"))
barplot(dat.ord,ylab="%",col=c("darkblue","grey80"))
barplot(dat.ord,ylab="%",col=c("darkblue","skyblue"))
legend("topright",inset=c(-0.25,0), legend=rownames(dat.ord),
fill=c("darkblue","skyblue"))
windows(width=4,height=3)
quartz(width=4,height=3)
par(mar=c(5.1, 4.1, 4.1, 7.1), xpd=TRUE)
barplot(dat.ord,ylab="%",col=c("darkblue","skyblue"))
legend("topright",inset=c(-0.25,0), legend=rownames(dat.ord),
fill=c("darkblue","skyblue"))
quartz(width=4,height=3)
par(mar=c(5.1, 4.1, 4.1, 7.1), xpd=TRUE)
barplot(dat.ord,ylab="%",col=c("darkblue","skyblue"))
legend("topright",inset=c(-5,0), legend=rownames(dat.ord),
fill=c("darkblue","skyblue"))
legend("topright",inset=c(-3,0), legend=rownames(dat.ord),
fill=c("darkblue","skyblue"))
legend("topright",inset=c(-1,0), legend=rownames(dat.ord),
fill=c("darkblue","skyblue"))
dat<-data.frame(x = c("Catch","Landed value",
"International trade value"),
Shellfish = c(18,34,33),
Finfish = c(82,66,67))
K<-100
r<-0.2
N<-c(1:100)
G<-r*N*(1-N/K)
plot(G~N)
A<-G+N
plot(A~N)
A
Ninit<-1
time<-100
source('~/.active-rstudio-document', echo=TRUE)
A<-vector()
K<-100
r<-0.2
time<-100
Ninit<-1
A<-vector()
A[1]<-Ninit
i<-1
N<-A[i]
N<-N+r*N*(1-N/K)
A[i+1]<-N
K<-100
r<-0.2
time<-100
Ninit<-1
A<-vector()
A[1]<-Ninit
for(i in 1:length(time)){
N<-A[i]
N<-N+r*N*(1-N/K)
A[i+1]<-N
}
plot(A~time)
K<-100
r<-0.2
time<-100
Ninit<-1
A<-vector()
A[1]<-Ninit
for(i in 1:length(time)){
N<-A[i]
N<-N+r*N*(1-N/K)
A[i+1]<-N
}
rm(list=ls())
K<-100
r<-0.2
time<-100
Ninit<-1
A<-vector()
A[1]<-Ninit
for(i in 1:length(time)){
N<-A[i]
N<-N+r*N*(1-N/K)
A[i+1]<-N
}
K<-100
r<-0.2
time<-1:100
Ninit<-1
A<-vector()
A[1]<-Ninit
for(i in 1:length(time)){
N<-A[i]
N<-N+r*N*(1-N/K)
A[i+1]<-N
}
plot(A~time)
plot(A)
K<-100
r<-0.1
time<-1:100
Ninit<-1
A<-vector()
A[1]<-Ninit
for(i in 1:length(time)){
N<-A[i]
N<-N+r*N*(1-N/K)
A[i+1]<-N
}
plot(A)
a<-0.7
W<-1:100
Ana<-W^a
plot(Ana~W)
a<-0.9
W<-1:100
Ana<-W^a
plot(Ana~W)
a<-0.5
W<-1:100
Ana<-W^a
plot(Ana~W)
install.packages(c("RCurl", "XML"))
library(RCurl)
library(XML)
library(plyr)
h=basicTextGatherer()
curlPerform(url = 'http://sirs.agrocampus-ouest.fr/EcoBase/php/webser/soap-client_3.php',writefunction=h$update)
data<-xmlTreeParse(h$value(),useInternalNodes=TRUE)
liste_mod<-ldply(xmlToList(data),data.frame)
View(liste_mod)
?lm
?setClass
setClass("Person", representation(name = "character", age = "numeric"))
setClass("Employee", representation(boss = "Person"), contains = "Person")
hadley <- new("Person", name = "Hadley", age = 31)
Person
hadley
Hadley
hadley <- new("Person", name = "Hadley")
Hadley
hadley
slot(hadley, "age")
hadley <- new("Person", name = "Hadley", age = 31)
slot(hadley, "age")
getSlots("Person")
getSlots("hadley")
getSlots(hadley)
Slots(hadley)
slots(hadley)
(hadley)
slot(hadley)
hadley <- new("Person", name = "Hadley", age = 31)
slot(hadley,"Hadley")
slot(hadley)
slot(hadley,"name")
slot(hadley,"age")
library(ggplot2)
library(grid)
library(gridExtra)
library(plyr)
library(lme4)
library(visreg)
rm(list=ls())
setwd("~/GitHub/open-climate-change/")
setwd('/Users/robins64/Documents/git_repos/open-climate-change')
load("./Data/scopus_OA_climate_clean.Rdata")  ## scopus data filtered by Jimmy - journals with > 200 papers in last 10 years
full.scop<-read.csv("./Data/ScopusOAData_20180214TT.csv",stringsAsFactors = F)
head(scop)
head(full.scop)
dat<-scop
dat$Cited.by[which(is.na(dat$Cited.by))]<-0
jour.dat<-dat[,c("Source.title","X2016.CiteScore","X2016.SJR","X2016.SNIP","Journal.Open.Access")]
jour.dat<-jour.dat[-which(duplicated(jour.dat)),]
sum.dat<-ddply(dat,.(Open.Access,Year),summarize,
CiteAve = mean(Cited.by,na.rm=T),
CiteVar = var(Cited.by,na.rm=T),
CiteN = length(Cited.by))
Jour.Var<-"X2016.SJR"     ## Use this
bins<-quantile(jour.dat[,Jour.Var],na.rm=T)  ##quantile bins
dat$jour.bin<-cut(dat[,Jour.Var],breaks = bins,labels = LETTERS[1:(length(bins)-1)])
dat$jour.bin[which(is.na(dat$jour.bin))]<-"A"
sum.dat2<-ddply(dat,.(Open.Access,Year,jour.bin),summarize,
CiteAve = mean(Cited.by,na.rm=T),
CiteVar = var(Cited.by,na.rm=T),
CiteN = length(Cited.by))
sum.dat2a<-ddply(sum.dat2,.(jour.bin),summarize,
N = sum(CiteN))
sum.dat2a$PropN<-sum.dat2a$N/sum(sum.dat2a$N)
p1<-ggplot(dat)
p1F<-p1 + theme_classic() +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("# citations (log + 1)") +
geom_boxplot(aes(x=as.factor(Year),y=log(Cited.by+1),colour=Open.Access),
outlier.shape=NA) +
facet_wrap(~jour.bin,nrow = 2,ncol = 2, scales="free") +
pdf("./figures/exploratory/scopus/citebySJRbins_byyear_nooutliers.pdf",width=8,height=6)
library(ggplot2)
library(grid)
library(gridExtra)
library(plyr)
install.packages("tibble")
library(ggplot2)
library(grid)
library(gridExtra)
library(plyr)
library(lme4)
library(visreg)
rm(list=ls())
setwd("~/GitHub/open-climate-change/")
setwd('/Users/robins64/Documents/git_repos/open-climate-change')
load("./Data/scopus_OA_climate_clean.Rdata")  ## scopus data filtered by Jimmy - journals with > 200 papers in last 10 years
full.scop<-read.csv("./Data/ScopusOAData_20180214TT.csv",stringsAsFactors = F)
head(scop)
head(full.scop)
dat<-scop
dat$Cited.by[which(is.na(dat$Cited.by))]<-0
jour.dat<-dat[,c("Source.title","X2016.CiteScore","X2016.SJR","X2016.SNIP","Journal.Open.Access")]
jour.dat<-jour.dat[-which(duplicated(jour.dat)),]
sum.dat<-ddply(dat,.(Open.Access,Year),summarize,
CiteAve = mean(Cited.by,na.rm=T),
CiteVar = var(Cited.by,na.rm=T),
CiteN = length(Cited.by))
Jour.Var<-"X2016.SJR"     ## Use this
bins<-quantile(jour.dat[,Jour.Var],na.rm=T)  ##quantile bins
dat$jour.bin<-cut(dat[,Jour.Var],breaks = bins,labels = LETTERS[1:(length(bins)-1)])
dat$jour.bin[which(is.na(dat$jour.bin))]<-"A"
sum.dat2<-ddply(dat,.(Open.Access,Year,jour.bin),summarize,
CiteAve = mean(Cited.by,na.rm=T),
CiteVar = var(Cited.by,na.rm=T),
CiteN = length(Cited.by))
sum.dat2a<-ddply(sum.dat2,.(jour.bin),summarize,
N = sum(CiteN))
sum.dat2a$PropN<-sum.dat2a$N/sum(sum.dat2a$N)
p1<-ggplot(dat)
p1F<-p1 + theme_classic() +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("# citations (log + 1)") +
geom_boxplot(aes(x=as.factor(Year),y=log(Cited.by+1),colour=Open.Access),
outlier.shape=NA) +
facet_wrap(~jour.bin,nrow = 2,ncol = 2, scales="free") +
pdf("./figures/exploratory/scopus/citebySJRbins_byyear_nooutliers.pdf",width=8,height=6)
dev.off()
dev.off()
p1<-ggplot(dat)
p1F<-p1 + theme_classic() +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("# citations (log + 1)") +
geom_boxplot(aes(x=as.factor(Year),y=log(Cited.by+1),colour=Open.Access),
outlier.shape=NA) +
facet_wrap(~jour.bin,nrow = 2,ncol = 2, scales="free")
p1F
pdf("./figures/exploratory/scopus/citebySJRbins_byyear_nooutliers.pdf",width=8,height=6)
p1F
dev.off()
fit1.2a<-lmer(Cited.by ~ Open.Access*jour.bin*as.factor(Year) + (1|Source.title), data=dat)
dat$Year.Fac<-as.factor(Year)
dat$Year.Fac<-as.factor(dat$Year)
fit4a<-lmer(Cited.by ~ Open.Access*jour.bin*Year.Fac + (1|Source.title), data=dat)
summary(fit4a)$coefficients
summary(fit4a)$coefficients[,1:2]
fit4b<-lmer(Cited.by ~ Open.Access*jour.bin + (1|Source.title), data=dat)
anova(fit1a,fit4a,fit4b)
fit1a<-lmer(Cited.by ~ Open.Access*jour.bin + (1|Year) + (1|Source.title), data=dat)
fit1b<-lmer(Cited.by ~ Open.Access*jour.bin + (1|Year), data=dat)
fit1c<-lmer(Cited.by ~ Open.Access*jour.bin + (1|Source.title), data=dat)
fit1d<-lmer(Cited.by ~ Open.Access + (1|Year) + (1|Source.title), data=dat)
fit1e<-lmer(Cited.by ~ Open.Access + (1|Year), data=dat)
fit1f<-lmer(Cited.by ~ Open.Access + (1|Source.title), data=dat)
fit1g<-lmer(Cited.by ~ 1 + (1|Year) + (1|Source.title), data=dat)
fit1h<-lm(Cited.by ~ Open.Access*jour.bin, data=dat)
anova(fit1a,fit4a,fit4b)
anova(fit1a,fit4a)
sum.dat2a
sum.dat2
p1F<-p1 + theme_classic() +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("# citations (log + 1)") +
geom_point(aes(x=Year,y=CiteAve,colour=jour.bin, shape=Open.Access))
p1F
p1<-ggplot(sum.dat2)
sum.dat2
p1F<-p1 + theme_classic() +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("# citations (log + 1)") +
geom_point(aes(x=Year,y=CiteAve,colour=jour.bin, shape=Open.Access))
p1F
p1F<-p1 +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("# citations (log + 1)") +
geom_point(aes(x=Year,y=CiteAve,colour=jour.bin, shape=Open.Access))
p1F
p1F<-p1 +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("Mean # citations") +
geom_point(aes(x=Year,y=CiteAve,colour=jour.bin, shape=Open.Access))
p1F
sum.dat2
library(reshape)
sum.dat3<-cast(sum.dat2[,1:4],Year+Jour.bin ~ Open.Access)
sum.dat3<-cast(sum.dat2[,1:4],Year+jour.bin ~ Open.Access)
head(sum.dat3)
names(sum.dat3)
sum.dat3$CiteAveRatio<-with(sum.dat3,Open.access/Closed)
names(sum.dat3)[,4]<-"Open.Access"
names(sum.dat3)[4]<-"Open.Access"
names(sum.dat3)
sum.dat3$CiteAveRatio<-with(sum.dat3,Open.Access/Closed)
p1<-ggplot(sum.dat3)
p1<-ggplot(sum.dat2)
p1F<-p1 +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("Mean # citations") +
geom_point(aes(x=Year,y=CiteAve,colour=jour.bin, shape=Open.Access))
p2<-ggplot(sum.dat3)
p2F<-p1 +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("Ratio # citations (OA:Closed)") +
geom_point(aes(x=Year,y=CiteAveRatio,colour=jour.bin))
p2F
sum.dat3
p1<-ggplot(sum.dat2)
p1F<-p1 +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("Mean # citations") +
geom_point(aes(x=Year,y=CiteAve,colour=jour.bin, shape=Open.Access))
p2<-ggplot(sum.dat3)
p2F<-p2 +
ggtitle(Jour.Var) +
xlab("Year") +
ylab("Ratio # citations (OA:Closed)") +
geom_point(aes(x=Year,y=CiteAveRatio,colour=jour.bin))
p2F
heaD(sum.dat4)
heaD(sum.dat3)
head(sum.dat3)
p1F
p2F
p1F
p2F
p2F
pdf("./figures/exploratory/scopus/meancitebySJRbins_byyear.pdf")
p1F
p2F
dev.off()
p2<-ggplot(sum.dat3)
p2F<-p2 +
ggtitle(Jour.Var) +
geom_hline(yintercept = 1) +
xlab("Year") +
ylab("Ratio # citations (OA:Closed)") +
geom_point(aes(x=Year,y=CiteAveRatio,colour=jour.bin))
pdf("./figures/exploratory/scopus/meancitebySJRbins_byyear.pdf")
p1F
p2F
dev.off()
p2F<-p2 +
ggtitle(Jour.Var) +
geom_hline(yintercept = 1, lty=2) +
xlab("Year") +
ylab("Ratio # citations (OA:Closed)") +
geom_point(aes(x=Year,y=CiteAveRatio,colour=jour.bin))
pdf("./figures/exploratory/scopus/meancitebySJRbins_byyear.pdf")
p1F
p2F
dev.off()
p2F<-p2 +
ggtitle(Jour.Var) +
geom_hline(yintercept = 1, lty=2, colour="grey25") +
xlab("Year") +
ylab("Ratio # citations (OA:Closed)") +
geom_point(aes(x=Year,y=CiteAveRatio,colour=jour.bin))
pdf("./figures/exploratory/scopus/meancitebySJRbins_byyear.pdf")
p1F
p2F
dev.off()
bins
head(jour.dat)
str(jour.dat)
jour.dat[which(jour.dat$X2016.SJR>2.6635),]
jour.dat$bin<-cut(dat[,Jour.Var],breaks = bins,labels = LETTERS[1:(length(bins)-1)])
jour.dat$bin<-cut(jour.dat[,Jour.Var],breaks = bins,labels = LETTERS[1:(length(bins)-1)])
names(jour.dat)[which(names(jour.dat)=="bin")]<-paste("bins",Jour.Var,sep=".")
View(jour.dat)
jour.dat<-dat[,c("Source.title","X2016.CiteScore","X2016.SJR","X2016.SNIP","Journal.Open.Access")]
jour.dat<-jour.dat[-which(duplicated(jour.dat)),]
Jour.Var<-"X2016.SJR"     ## Use this
bins<-quantile(jour.dat[,Jour.Var],na.rm=T)  ##quantile bins
jour.dat$bin<-cut(jour.dat[,Jour.Var],breaks = bins,labels = LETTERS[1:(length(bins)-1)])
jour.dat$bin[which(is.na(jour.dat$bin))]<-"A"
names(jour.dat)[which(names(jour.dat)=="bin")]<-paste("bins",Jour.Var,sep=".")
getwd(0)
getwd()
write.csv(jour.dat,"./Data/SJRBinJournallist_fromScopus.csv",row.names=F)
bins
jour.dat<-dat[,c("Source.title","X2016.CiteScore","X2016.SJR","X2016.SNIP","Journal.Open.Access")]
jour.dat<-jour.dat[-which(duplicated(jour.dat)),]
bins<-quantile(jour.dat[,Jour.Var],na.rm=T)  ##quantile bins
Jour.Var<-"X2016.SJR"     ## Use this
bins<-quantile(jour.dat[,Jour.Var],na.rm=T)  ##quantile bins
jour.dat$bin<-cut(jour.dat[,Jour.Var],breaks = bins,labels = LETTERS[1:(length(bins)-1)])
jour.dat$bin[which(is.na(jour.dat$bin))]<-"A"
write.csv(jour.dat,"./Data/BinJournallist_fromScopus.csv",row.names=F)
